@use "src/styles/partials/abstracts/variables" as var;
@use "../base/mixin" as mix;


.monospace {
}

.underline {
  text-decoration: underline;
}

.glow {
  @include mix.glow(var.$color--green);
}

.hidden {
  display: none;
}

.invisible {
  visibility: hidden;
}

.stick-to-bottom {
  position: fixed;
  bottom: 0;
}


////////////////////////////////////
// glitch
////////////////////////////////////
.glitch {
  display: flex;
  flex-direction: column;
  color: #FAFAFA;
  
  &__stack {
    color: var.$color--blue-night--50;
    display: grid;
    grid-template-columns: 1fr;
    
  }
  
  &__span {
    --stack-height: calc(100% / var(--stacks) - 1px);
    --inverse-index: calc(calc(var(--stacks) - 1) - var(--index));
    --clip-top: calc(var(--stack-height) * var(--index));
    --clip-bottom: calc(var(--stack-height) * var(--inverse-index));
    
    grid-row-start: 1;
    grid-column-start: 1;
  
    font-size: 2.5rem;
  
    clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
    $repetitions: 20;
    animation: stack 200ms cubic-bezier(.46, .29, 0, 1.24) 1 backwards calc(var(--index) * 120ms), glitch 1.5s ease $repetitions 1.5s alternate-reverse;
  }
  
  &__span:nth-child(odd) {
    --glitch-translate: 8px;
  }
  
  &__span:nth-child(even) {
    --glitch-translate: -8px;
  }
  
  $color--scan-line-1: red;
  $color--scan-line-2: blue;
  
  @keyframes stack {
    0% {
      opacity: 0;
      transform: translateX(-50%);
      text-shadow: -2px 3px 0 $color--scan-line-1, 2px -3px 0 $color--scan-line-2;
    }
    60% {
      opacity: 0.5;
      transform: translateX(50%);
    }
    80% {
      transform: none;
      opacity: 1;
      text-shadow: 2px -3px 0 $color--scan-line-1, -2px 3px 0 $color--scan-line-2;
    }
    100% {
      text-shadow: none;
    }
  }
  
  @keyframes glitch {
    0% {
      text-shadow: -2px 3px 0 $color--scan-line-1, 2px -3px 0 $color--scan-line-2;
      transform: translate(var(--glitch-translate));
    }
    2% {
      text-shadow: 2px -3px 0 $color--scan-line-1, -2px 3px 0 $color--scan-line-2;
    }
    4%, 100% {
      text-shadow: none;
      transform: none;
    }
  }
  
}// .glitch


////////////////////////////////////
// scan lines effect
////////////////////////////////////
.scanlines--static {
  position: relative;
  
  &::after {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: linear-gradient(
                    to bottom,
                    rgba(var.$color--blue-night, 0) 50%,
                    rgba(var.$color--blue-night, 0.5) 50%
    );
    background-size: 100% 2px;
    z-index: 2;
    pointer-events: none;
  }
}

.scanlines--animated {
  /* LIST OF FURTHER IMPROVEMENTS */
  
  // 1. settings: direction of moving scanlines (currently: only bottom to top)
  // 2. settings: number of moving scanlines (currently: 0 or 1)
  // 3. settings: delay between 2 moving scanlines
  // 4. check css validity with keyframes 0% without second step
  
  /*
  currently working on :
  calculation draft for keyframes steps
  
  $scan-moving-duration: 3s;
  $scan-moving-delay: 7s;
  
  total time = 10s (duration + delay)
  keyframes :
      0%: wait
      15%: start moving
      85%: end moving & start waiting
      100% : wait
  
  (the rest later)
  
  */
  
  position: relative;
  overflow: hidden; // only to animate the unique scanline
  
  
  
  /* REGULAR SCANLINES SETTINGS */
  
  // width of 1 scanline (min.: 1px)
  $scan-width: 1px;
  
  // emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)
  $scan-crt: false;
  
  // frames-per-second (should be > 1), only applies if $scan-crt: true;
  $scan-fps: 60;
  
  // scanline-color (rgba)
  $scan-color: rgba(var.$color--blue-night, .3);
  
  // set z-index on 8, like in ♥ 8-bits ♥, or…
  // set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);
  $scan-z-index: 2147483648;
  
  /* MOVING SCANLINE SETTINGS */
  
  // moving scanline (true, false)
  $scan-moving-line: false;
  
  // opacity of the moving scanline
  $scan-opacity: .75;
  
  /* MIXINS */
  
  // apply CRT animation: @include scan-crt($scan-crt);
  @mixin scan-crt($scan-crt) {
    @if $scan-crt == true {
      animation: scanlines 1s steps($scan-fps) infinite;
    }
    @else { animation: none; }
  }
  
  // apply CRT animation: @include scan-crt($scan-crt);
  @mixin scan-moving($scan-moving-line) {
    @if $scan-moving-line == true {
      animation: scanline 6s linear infinite;
    }
    @else { animation: none; }
  }
  
  /* CSS .scanlines CLASS */

  &:before,
  &:after {
    display: block;
    pointer-events: none;
    content: '';
    position: absolute;
  }
  
  // unique scanline travelling on the screen
  &:before {
    // position: absolute;
    // bottom: 100%;
    width: 100%;
    height: $scan-width * 1;
    z-index: $scan-z-index + 1;
    background: $scan-color;
    opacity: $scan-opacity;
    // animation: scanline 6s linear infinite;
    @include scan-moving($scan-moving-line);
  }
  
  // the scanlines, so!
  &:after {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $scan-z-index;
    background: linear-gradient(
                    to bottom,
                    transparent 50%,
                    $scan-color 51%
    );
    background-size: 100% $scan-width*2;
    @include scan-crt($scan-crt);
  }
  
  /* ANIMATE UNIQUE SCANLINE */
  @keyframes scanline {
    0% {
      transform: translate3d(0,200000%,0);
      // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
  }
  
  @keyframes scanlines {
    0% {
      background-position: 0 50%;
      // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
    }
  }
}



////////////////////////////////////
// PARALLAX effect
////////////////////////////////////
$perspective-value: 1;
$perspective: $perspective-value + 0px;

.parallax-container {
  perspective: $perspective;
  height: 100vh;
  //width: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  
  // webkit bug
  perspective-origin-x: 100%;
  //perspective-origin: 50% 0;
  //-webkit-overflow-scrolling: touch;
}

.parallax-layer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  // webkit bug
  transform-origin-x: 100%;
  //position: -webkit-sticky;
  
  
  // from the farthest
  //
  // scale factor formula:
  // 1 + (translateZ * -1) / perspective
  &--1 {
    $depth-value: 1.5 ;
    $depth: -$depth-value + 0px ;
    transform: translateZ($depth) scale(calc((1 + $depth-value) / 1));
  }
  
  &--2 {
    margin-top: 100vh;
    transform: translateZ(0);
  }
  
  &--3 {
    margin-top: 500vh;
    $depth-value: 1 ;
    $depth: -$depth-value + 0px ;
    transform: translateZ($depth) scale(calc((1 + $depth-value) / 1));
  }
  
  &--4 {
    margin-top: 600vh;
    transform: translateZ(0);
  }
}

.parallax-group {
  transform-style: preserve-3d;
}






////////////////////////////////////
// crt effect
////////////////////////////////////
.crt {
  animation: textShadow 1.6s 7;
  // add crt radial gradient effect
  //@include mix.crt-gradient();
  
  &::after {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: rgba(18, 16, 16, 0.1);
    opacity: 0;
    z-index: 2;
    pointer-events: none;
    animation: flicker 0.15s 100;
  }
  
  &::before {
    content: " ";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: linear-gradient(rgba(18, 16, 16, 0) 80%, #000 50%), linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
    z-index: 2;
    background-size: 100% 2px, 3px 100%;
    pointer-events: none;
  }
  
  @keyframes flicker {
    0% {
      opacity: 0.27861;
    }
    5% {
      opacity: 0.34769;
    }
    10% {
      opacity: 0.23604;
    }
    15% {
      opacity: 0.90626;
    }
    20% {
      opacity: 0.18128;
    }
    25% {
      opacity: 0.83891;
    }
    30% {
      opacity: 0.65583;
    }
    35% {
      opacity: 0.67807;
    }
    40% {
      opacity: 0.26559;
    }
    45% {
      opacity: 0.84693;
    }
    50% {
      opacity: 0.96019;
    }
    55% {
      opacity: 0.08594;
    }
    60% {
      opacity: 0.20313;
    }
    65% {
      opacity: 0.71988;
    }
    70% {
      opacity: 0.53455;
    }
    75% {
      opacity: 0.37288;
    }
    80% {
      opacity: 0.71428;
    }
    85% {
      opacity: 0.70419;
    }
    90% {
      opacity: 0.7003;
    }
    95% {
      opacity: 0.36108;
    }
    100% {
      opacity: 0.24387;
    }
  }
  
  @keyframes textShadow {
    0% {
      text-shadow: 0.4389924193300864px 0 1px rgba(0,30,255,0.5), -0.4389924193300864px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    5% {
      text-shadow: 2.7928974010788217px 0 1px rgba(0,30,255,0.5), -2.7928974010788217px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    10% {
      text-shadow: 0.02956275843481219px 0 1px rgba(0,30,255,0.5), -0.02956275843481219px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    15% {
      text-shadow: 0.40218538552878136px 0 1px rgba(0,30,255,0.5), -0.40218538552878136px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    20% {
      text-shadow: 3.4794037899852017px 0 1px rgba(0,30,255,0.5), -3.4794037899852017px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    25% {
      text-shadow: 1.6125630401149584px 0 1px rgba(0,30,255,0.5), -1.6125630401149584px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    30% {
      text-shadow: 0.7015590085143956px 0 1px rgba(0,30,255,0.5), -0.7015590085143956px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    35% {
      text-shadow: 3.896914047650351px 0 1px rgba(0,30,255,0.5), -3.896914047650351px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    40% {
      text-shadow: 3.870905614848819px 0 1px rgba(0,30,255,0.5), -3.870905614848819px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    45% {
      text-shadow: 2.231056963361899px 0 1px rgba(0,30,255,0.5), -2.231056963361899px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    50% {
      text-shadow: 0.08084290417898504px 0 1px rgba(0,30,255,0.5), -0.08084290417898504px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    55% {
      text-shadow: 2.3758461067427543px 0 1px rgba(0,30,255,0.5), -2.3758461067427543px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    60% {
      text-shadow: 2.202193051050636px 0 1px rgba(0,30,255,0.5), -2.202193051050636px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    65% {
      text-shadow: 2.8638780614874975px 0 1px rgba(0,30,255,0.5), -2.8638780614874975px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    70% {
      text-shadow: 0.48874025155497314px 0 1px rgba(0,30,255,0.5), -0.48874025155497314px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    75% {
      text-shadow: 1.8948491305757957px 0 1px rgba(0,30,255,0.5), -1.8948491305757957px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    80% {
      text-shadow: 0.0833037308038857px 0 1px rgba(0,30,255,0.5), -0.0833037308038857px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    85% {
      text-shadow: 0.09769827255241735px 0 1px rgba(0,30,255,0.5), -0.09769827255241735px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    90% {
      text-shadow: 3.443339761481782px 0 1px rgba(0,30,255,0.5), -3.443339761481782px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    95% {
      text-shadow: 2.1841838852799786px 0 1px rgba(0,30,255,0.5), -2.1841838852799786px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
    100% {
      text-shadow: 2.6208764473832513px 0 1px rgba(0,30,255,0.5), -2.6208764473832513px 0 1px rgba(255,0,80,0.3), 0 0 3px;
    }
  }
}// .crt



/////////////////////////////////////////
// MISC
/////////////////////////////////////////
.test--layer-1 {
  background-color: #9bdea7;
  text-align: center;
  background: url("https://images.unsplash.com/photo-1657653463810-fa2f223fbb82?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=928&q=80");
}

.test--layer-2 {
  background-color: #6e8ca4;
  text-align: center;
  background: url("https://images.unsplash.com/photo-1657722227063-f17fa81aeae3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80");
}







